<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pizza_a.example.mapper.OrderMapper">
<!-- 권한 읽기 -->

	<!-- 요걸로 JOIN도 할 수 있고, VO 속성 차이 없이 부를 수 있게 된다. 참내
		https://suhun918.tistory.com/15
	
	<resultMap type="AdminInfoVO" id="AdminInfoVO">
		<result column="ADMIN_NAME" property="adminName" />
		<result column="ADMIN_PHONE" property="adminPhone" />
		<result column="ADMIN_EMAIL" property="adminEmail" />
	</resultMap>
	
	<resultMap type="AdminVO" id="AdminVO">
		<result column="ADMIN_ID" property="adminId" />
		<result column="HSPTL_ID" property="hsptlId" />
		<result column="FIRST_REG_DT" property="createTime" />
		<result column="ADMIN_LEVEL" property="adminLv" />
		<collection property="adminInfoVO" resultMap="AdminInfoVO" />
	</resultMap>
	


							
	-->


	<resultMap type="UserVO" id="UserVO">
		<result column="u_id" property="username" />
		<result column="u_add_point" property="uAddPoint" />
		
	</resultMap>
	
	<resultMap type="OrderVO" id="OrderVO">
		<result column="u_id" property="username" />
		<result column="u_address" property="orderAddress" />
		<result column="u_zipcode" property="orderZipcode" />
		<result column="order_request" property="orderRequest" />
		
		
		<!-- 
		<result column="u_receipt_phone_number" property="uReceiptPhoneNumber" />
		<result column="u_pay_method_number" property="uPayMethodNumber" />
		 -->
		<collection property="userVO" resultMap="UserVO" />
	</resultMap>
	
	<select id="read_LastOrderItems_byusername" parameterType="String" resultType="OrderVO">
			SELECT			order_item_size				as orderItemSize,
							order_item_quantity_EA	as orderItemQuantity,
							order_item_price_won	as orderItemPrice,
							ta.u_id					as username,
							ta.order_id				as orderId,
							order_request			as orderRequest
			FROM			pizza_order ta
			LEFT JOIN		pizza_order_items tb 
				ON 			ta.order_id = tb.order_id
			LEFT JOIN		pizza_store tc
				ON 			ta.order_store_id = tc.store_id		
			WHERE			ta.u_id = #{username}
			AND NOT 		ta.order_status ='preparing'
			ORDER BY		ta.order_id DESC
			LIMIT			1, 1
	</select>
	
	<select id="read_BasicOrderItems_byusername" parameterType="String" resultMap="OrderVO">
			SELECT			ta.u_id,
							u_address,
							u_zipcode,
							u_store_id,
							order_request,
							u_receipt_phone_number,
							u_pay_method_number,
							u_add_point
			FROM			pizza_user ta
			LEFT JOIN		pizza_user_address tb
				ON 			ta.u_basic_address_id = tb.u_address_id							
			LEFT JOIN		pizza_order tc
				ON 			ta.u_id = tc.u_id	
			LEFT JOIN		pizza_user_payment_info td
				ON 			ta.u_id = td.u_id		
			LEFT JOIN		pizza_user_additional te
				ON 			ta.u_id = te.u_id	
																	
			WHERE			ta.u_id = #{username}
			AND NOT 		tc.order_status ='preparing'
			ORDER BY		tc.order_id DESC
			LIMIT			0, 1
			
	</select>
	<!-- 
	<select id="read_BasicOrderItems_byusername" parameterType="String" resultType="OrderVO">
			SELECT			ta.u_id					as username,
							u_address				as orderAddress,
							u_zipcode				as orderZipcode,
							u_store_id				as StoreId,
							tc.order_request		as orderRequest,
							u_receipt_phone_number	AS uReceiptPhoneNumber,
							u_pay_method_number 	AS uPayMethodNumber,
							u_add_point
			FROM			pizza_user ta
			LEFT JOIN		pizza_user_address tb
				ON 			ta.u_basic_address_id = tb.u_address_id							
			LEFT JOIN		pizza_order tc
				ON 			ta.u_id = tc.u_id	
			LEFT JOIN		pizza_user_payment_info td
				ON 			ta.u_id = td.u_id		
			LEFT JOIN		pizza_user_additional te
				ON 			ta.u_id = te.u_id	
																	
			WHERE			ta.u_id = #{username}
			AND NOT 		tc.order_status ='preparing'
			ORDER BY		tc.order_id DESC
			LIMIT			0, 1
			
	</select>
	 -->
	
	<select id="read_PresentOrderItems_byusername" parameterType="String" resultType="OrderVO">
			SELECT			order_item_size			as orderItemSize,
							order_item_quantity_EA	as orderItemQuantity,
							order_item_price_won	as orderItemPrice,
							u_id					as username,
							order_address			as orderAddress,
							order_zipcode			as orderZipcode,
							ta.order_id				as orderId,
							ta.order_store_id		as StoreId,
							store_name				as storeName,
							store_manager			as storeMangaer,
							store_phone				as storePhone,
							order_status			as orderStatus,
							order_deliver			as orderDeliver,
							order_request			as orderRequest
			FROM			pizza_order ta
			LEFT JOIN		pizza_order_items tb 
				ON 			ta.order_id = tb.order_id
			LEFT JOIN		pizza_store tc
				ON 			ta.order_store_id = tc.store_id
			WHERE			ta.u_id = #{username}
			AND				ta.order_status = 'preparing'
			ORDER BY		ta.order_id DESC
			LIMIT			0, 1
	</select>
	<insert  id="makeOrder" parameterType="OrderVO" >
			INSERT INTO		pizza_order
							(u_id,order_status,order_time)
			VALUE			(#{username},'preparing',now())	
			
		<selectKey keyProperty="orderId" resultType="Integer">
	        SELECT LAST_INSERT_ID()
	    </selectKey>	
	    	
	</insert>
	
	<select  id="StartOrder" parameterType="String" resultType="int">
			SELECT 			order_id AS orderId
			FROM 			pizza_order
			WHERE 			u_id=#{username}
			ORDER BY		order_id DESC
			LIMIT			0, 1
	</select>
	
	<insert  id="Stg2_1_setPizza_basic" parameterType="OrderVO">
			INSERT INTO		pizza_order_items
							(order_id,order_item_size,order_item_quantity_EA,order_item_price_won)
			VALUE			(#{orderId},#{orderItemSize},#{orderItemQuantity},#{orderItemPrice});
	</insert>

	<delete id="erasePreparingOrder"  parameterType="String" > 
			DELETE 
			from 			pizza_order 
			where 			order_id>200
			AND 			required_time=NULL;
	</delete>
	
	<update id="Stg3_1_1_SetBasicAddress_deliver1_LastAddress" parameterType="OrderVO">
			UPDATE 			pizza_order
			SET	 			order_zipcode	= #{orderZipcode},
							order_address	= #{orderAddress},
							order_store_id	= #{storeId}
			WHERE 			order_id		= #{orderId}
	</update>

	<update id="Stg3_1_1_SetBasicAddress_deliver1_AnotherAddress" parameterType="OrderVO">
			UPDATE 			pizza_order
			SET	 			order_zipcode	= #{orderZipcode},
							order_address	= #{orderAddress},
							order_store_id	= #{storeId}
			WHERE 			order_id		= #{orderId}
	</update>
</mapper>
